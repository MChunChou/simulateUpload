{"version":3,"sources":["simulateServer.js","Upload.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["simulateServer","db","files","File","type","upload","_","each","file","deleteFile","name","push","getFileList","map","element","f","index","findIndex","splice","Upload","timeout","clearFile","path","useState","progress","setProgress","open","setOpen","useEffect","length","simulateProgress","setTimeout","clearTimeout","className","Dialog","fullWidth","DialogContent","LinearProgress","variant","value","DialogActions","Button","onClick","evt","color","ListCard","labelId","handleCheck","React","checked","setChecked","prevalue","ref","useRef","current","usePrevious","JSON","stringify","ListItem","role","undefined","ListItemIcon","Checkbox","edge","tabIndex","onChange","_evt","ListItemText","id","primary","ListItemSecondaryAction","is_dir","IconButton","confirm","Update","setFiles","list","setList","check","setCheck","handleDrop","uploadFiles","key","indexOf","v","checkArr","Object","assign","without","FileDrop","onDrop","target","htmlFor","component","join","List","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.314a32d0.chunk.js","sourcesContent":["import _ from 'underscore'\n\nconst simulateServer = {\n    db: {\n        files: [new File([\"this is first file\"], \"showfirstFile.txt\", {\n            type: \"text/plain\",\n        })],\n    },\n    upload: (files) => {                \n\n        _.each(files, (file)=>{ \n            simulateServer.deleteFile([file.name])                       \n            simulateServer.db.files.push(\n                file\n            )\n        })        \n\n        return true\n    },\n    getFileList: () => {        \n        return simulateServer.db.files.map(element => {            \n            return {name: element.name}\n        });\n    },    \n    deleteFile: (files) => {         \n        _.each(files, f => {\n            let index = _.findIndex(simulateServer.db.files, {name: f} );\n            if(index > -1){\n                simulateServer.db.files.splice(index, 1);\n            }            \n        })        \n            \n        return true\n    }\n}\n\nexport default simulateServer;\n","import React, { useState, useEffect } from \"react\";\nimport _ from 'underscore';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from \"@material-ui/core/Button\";\nimport simulateServer from './simulateServer';\n\nexport default function Upload({ files = [], clearFile, path }) {\n    let [progress, setProgress] = useState(0);    \n    let [open, setOpen] = useState(false);            \n\n    useEffect(() => {        \n        if (files.length > 0) {                                    \n            setOpen(true);     \n            simulateProgress()\n        }                    \n    }, [files.length, progress]);            \n\n    let timeout;\n\n    const simulateProgress = function(){               \n                 \n        timeout = setTimeout( ()=>{       \n            if( progress < 100) {\n                setProgress(progress + 1)                   \n            }else{\n                simulateServer.upload(files);                                                             \n                clearTimeout(timeout);\n                clearFile();\n            }\n        }, 10);  \n        \n    }\n\n    return (\n        <div className=\"upload\">\n            <Dialog\n                open={open}\n                fullWidth={true}\n            >\n                <DialogContent>\n                    {\n                        progress > 0 ? <div>\n                            File Upload:\n                            <LinearProgress variant=\"determinate\" value={progress} />\n                            <span className=\"percent\">{progress} / 100%</span>\n                        </div> : \"\"\n                    }\n\n                </DialogContent>\n                <DialogActions>                    \n                    {\n                        progress === 100 ?\n                            <Button onClick={evt => { \n                                setOpen(false) \n                                setProgress(0)\n                            }} color=\"primary\">\n                                done\n                        </Button> : \"\"\n                    }\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport FileDrop from 'react-file-drop'\n\nimport _ from 'underscore'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport UploadFile from './Upload.jsx';\nimport simulateServer from \"./simulateServer.js\";\n\nfunction usePrevious(value) {\n    const ref = React.useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nfunction ListCard({ value, labelId, getFileList, handleCheck }) {\n    let [checked, setChecked] = React.useState(false)\n    const prevalue = usePrevious(value);\n\n    useEffect(() => {        \n        if (JSON.stringify(prevalue) !== JSON.stringify(value)) {\n            setChecked(false)\n        }\n    }, [prevalue, value]);\n\n    const handleDelete = _evt => {        \n        // eslint-disable-next-line no-restricted-globals\n        confirm(`Are you sure to delete files: \\n ${value.name} `) &&\n            simulateServer.deleteFile([value.name]) && getFileList()\n    }\n\n    const handleOnChange = _evt => {\n        setChecked(!checked)\n        handleCheck(!checked, value)\n    }\n\n    return (\n        <ListItem role={undefined} className=\"list-card\">\n            <ListItemIcon>\n                <Checkbox\n                    edge=\"start\"\n                    tabIndex={-1}\n                    checked={checked}\n                    onChange={handleOnChange}\n                />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={value.name} />\n            <ListItemSecondaryAction>\n                {\n                    value.is_dir ? \"\" :\n                        <IconButton edge=\"end\" onClick={handleDelete} className={\"list-icon-button\"}>\n                            <DeleteIcon />\n                        </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default function Update() {\n    let [files, setFiles] = useState([]);\n    let [list, setList] = useState([]);\n    let [check, setCheck] = useState([]);    \n\n    useEffect(()=>{\n        getFileList();   \n    }, [files])\n    \n\n    let getFileList = () => {\n        setList(simulateServer.getFileList());\n    }\n\n    let handleDrop = (files, evt) => {\n        let uploadFiles = []\n        _.each(files, (value, key) => {\n            // check has file exist\n            _.indexOf(list.map(v => v.name), value.name) > -1 ?\n                // eslint-disable-next-line no-restricted-globals\n                confirm(`Cover this file ${value.name}?`) \n                &&  uploadFiles.push(value) : uploadFiles.push(value)\n        })\n\n        setFiles(uploadFiles);\n    }\n\n    let handleDeleteAll = evt => {        \n        check.length > 0 && \n        // eslint-disable-next-line no-restricted-globals\n        confirm(`Are you sure to delete files: \\n ${check.join(\"\\n\")} `) &&\n        simulateServer.deleteFile(check); \n        getFileList();       \n    }\n\n    let handleUpload = evt => {\n        let files = evt.target.files;\n        handleDrop(files, evt);\n    }\n\n    let handleCheck = (checked, file) => {\n        let { name } = file;\n        let checkArr = Object.assign([], check);\n        if(checked) {\n            checkArr.push(name)\n        }else{\n            if(_.indexOf(checkArr, name) > -1){\n                checkArr = _.without(checkArr, name)\n            }\n        }\n\n        if (JSON.stringify(check) !== JSON.stringify(checkArr)) {\n            setCheck(checkArr)\n        }\n    }\n\n    return (\n        <div className=\"update\">\n            <FileDrop onDrop={handleDrop}>\n                <div className=\"description\">Using button upload to add file or Drag file to page</div>\n                <div className=\"control-bar\">\n                    <div className=\"control-btns\">\n                        <input type=\"file\" id=\"file-upload\" onChange={handleUpload} value={''}/>\n                        <label htmlFor=\"file-upload\">\n                            <Button component=\"span\" variant=\"contained\" color=\"default\" className=\"button\">\n                                upload\n                        <CloudUploadIcon className=\"right-icon\" />\n                            </Button>\n                        </label>\n                        <Button variant=\"contained\" color=\"default\" className=\"button\" onClick={handleDeleteAll}>\n                            delete\n                        <DeleteIcon className=\"right-icon\" />\n                        </Button>\n                    </div>\n                    <span>Files:</span>\n                </div>\n                <div className=\"list\">\n                    <List >                        \n                        {list.map((value, index) => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            if (!value.is_dir) {\n                                return (\n                                    <ListCard\n                                        key={`${value}-${index}`}\n                                        value={value}\n                                        labelId={labelId}\n                                        handleCheck={handleCheck}\n                                        getFileList={getFileList}\n                                    />\n                                );\n                            } else {\n                                return \"\"\n                            }\n                        })}\n                    </List>\n                </div>\n            </FileDrop>    \n            <UploadFile \n                files={files}\n                clearFile={ _ => {                        \n                    getFileList();\n                    setFiles([]);\n                }}\n                />\n        </div> \n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}